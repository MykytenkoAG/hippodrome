import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

public class HippodromeTest {
    //2. Класс Hippodrome:
    //Конструктор
    //Проверить, что при передаче в конструктор null, будет выброшено IllegalArgumentException;

    //Проверить, что при передаче в конструктор null, выброшенное исключение будет содержать сообщение "Horses cannot be null.";

    //Проверить, что при передаче в конструктор пустого списка, будет выброшено IllegalArgumentException;

    //Проверить, что при передаче в конструктор пустого списка, выброшенное исключение будет содержать сообщение "Horses cannot be empty.";


    //метод getHorses
    //Проверить, что метод возвращает список, который содержит те же объекты и в той же последовательности, что и список который был передан в конструктор. При создании объекта Hippodrome передай в конструктор список из 30 разных лошадей;

    //метод move
    //Проверить, что метод вызывает метод move у всех лошадей. При создании объекта Hippodrome передай в конструктор список из 50 моков лошадей и воспользуйся методом verify.

    //метод getWinner
    //Проверить, что метод возвращает лошадь с самым большим значением distance.

}
